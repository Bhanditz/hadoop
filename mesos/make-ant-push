#!/bin/bash

# TODO(benh): Check that we have at least one arg, the distribution.

# Use 'atexit' for cleanup.
. $(dirname ${0})/atexit.sh

# Use 'colors'!
. $(dirname ${0})/colors.sh

# Check "arguments".
: ${RELEASE:?"${RED}Missing (or empty); expected RELEASE=R${NORMAL}"}
: ${MESOS_JAR:?"Missing (or empty); expected MESOS_JAR=/path/to/jar"}
: ${PROTOBUF_JAR:?"Missing (or empty); expected PROTOBUF_JAR=/path/to/jar"}

# TODO(benh): Check that we are running out of the root directory and
# can use the Makefile.

# Make sure we have a clean tree in order to commit and tag.
if test ! -z "$(git diff --shortstat)"; then
  echo "${RED}Please commit or stash your changes${NORMAL}"
  exit 1
elif test ! -z "$(git diff --staged --shortstat)"; then
  echo "${RED}Please commit or stash your changes${NORMAL}"
  exit 1
fi

# We also don't want to add any random files into the distribution and
# the 'git diff' above won't tell us about untracked files. Moreover,
# we'll want to do a 'git clean' once we're done to be get back to a
# clean tree and we don't want to delete a file someone expects to be
# there.
if test ! -z "$(git clean -nd)"; then
  echo "${RED}Please remove untracked files (try 'git clean -nd')${NORMAL}"
  exit 1
fi

# Save the current commit and add an 'atexit' command to reset.
commit=$(git rev-parse HEAD)

atexit "git reset --hard ${commit} && git clean -fd >/dev/null 2>&1"

make ${1}

# We remove the tarball, extracted directory, the Makefile, and the
# mesos directory so we don't pollute the distribution (a Makefile
# could really be a red herring for a Hadoop newbie).

rm -f hadoop-${1}.tar.gz
rm -rf hadoop-${1}

git rm Makefile
git mv README.md mesos/
git add .
git commit -am "Hadoop on Mesos."
git tag ${1}-$(basename ${MESOS_JAR} .jar)-${RELEASE} || exit 1

# Now reset and checkout the Makefile and mesos directory and make
# sure everything compiles!
git reset HEAD~ >/dev/null 2>&1
git checkout Makefile >/dev/null 2>&1

make ant-${1} || exit 1

git push origin ${1}-$(basename ${MESOS_JAR} .jar)-${RELEASE}
